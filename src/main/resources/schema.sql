DROP TABLE IF EXISTS users, mpa, films, friend, likes, genres, film_genre;


CREATE TABLE IF NOT EXISTS users
(
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL,
    email varchar(255) NOT NULL,
    login varchar(255) NOT NULL,
    birthday datetime,
    CONSTRAINT users_pk PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40),
    CONSTRAINT mpa_pk PRIMARY KEY (mpa_id)
);

CREATE TABLE IF NOT EXISTS films
(
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL,
    description varchar(255) NOT NULL,
    release_date date,
    duration integer,
    mpa_id integer,
    rate integer,
    CONSTRAINT films_pk PRIMARY KEY (film_id),
    CONSTRAINT fk_mpa_id FOREIGN KEY (mpa_id) REFERENCES MPA(mpa_id)
);

CREATE TABLE IF NOT EXISTS friend
(
    user_id INTEGER REFERENCES users (user_id),
    friend_id INTEGER REFERENCES users (user_id),
    CONSTRAINT friends_pk PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes
(
    user_id INTEGER REFERENCES users (user_id),
    film_id INTEGER REFERENCES films (film_id),
    CONSTRAINT likes_pk PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name      varchar(40),
    CONSTRAINT genres_pk PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id INTEGER REFERENCES films (film_id),
    genre_id INTEGER REFERENCES genres (genre_id),
    CONSTRAINT film_genre_pk PRIMARY KEY (film_id, genre_id)
);
